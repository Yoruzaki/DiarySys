// src/components/PrintCollectionReport.js
import React from 'react';
import { format } from 'date-fns';

const PrintCollectionReport = React.forwardRef(({ 
  collections, 
  reportType, 
  dateRange,
  logo // Add logo prop
}, ref) => {
  // Calculate totals and averages with better error handling
  const totalQuantity = collections.reduce((sum, item) => sum + (parseFloat(item.quantity) || 0), 0);
  const validFatContentItems = collections.filter(item => !isNaN(parseFloat(item.fat_content)));
  const avgFatContent = validFatContentItems.length > 0 
    ? validFatContentItems.reduce((sum, item) => sum + parseFloat(item.fat_content), 0) / validFatContentItems.length 
    : 0;
  
  const validTempItems = collections.filter(item => !isNaN(parseFloat(item.temperature)));
  const avgTemperature = validTempItems.length > 0
    ? validTempItems.reduce((sum, item) => sum + parseFloat(item.temperature), 0) / validTempItems.length
    : 0;

  return (
    <div ref={ref} className="p-8" style={{ fontFamily: 'Arial, sans-serif' }}>
      {/* Header with logo and title */}
      <div className="flex justify-between items-center mb-6">
        {logo && (
          <div className="w-32 h-32">
            <img 
              src={logo} 
              alt="Company Logo" 
              className="w-full h-full object-contain"
            />
          </div>
        )}
        <div className="flex-1 text-center">
          <h1 className="text-2xl font-bold mb-2">
            Milk Collection {reportType.charAt(0).toUpperCase() + reportType.slice(1)} Report
          </h1>
          <p className="text-sm text-gray-600">
            {format(new Date(dateRange.start), 'MMMM dd, yyyy')} to {format(new Date(dateRange.end), 'MMMM dd, yyyy')}
          </p>
        </div>
        {!logo && <div className="w-32"></div>} {/* Empty spacer for balance */}
      </div>

      {/* Summary Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div className="border rounded-lg p-4 shadow-sm">
          <h3 className="text-sm font-medium text-gray-500">Total Collections</h3>
          <p className="text-2xl font-bold">{collections.length}</p>
        </div>
        <div className="border rounded-lg p-4 shadow-sm">
          <h3 className="text-sm font-medium text-gray-500">Total Quantity</h3>
          <p className="text-2xl font-bold">{totalQuantity.toFixed(2)} L</p>
        </div>
        <div className="border rounded-lg p-4 shadow-sm">
          <h3 className="text-sm font-medium text-gray-500">Avg Fat Content</h3>
          <p className="text-2xl font-bold">{avgFatContent.toFixed(2)}%</p>
        </div>
        <div className="border rounded-lg p-4 shadow-sm">
          <h3 className="text-sm font-medium text-gray-500">Avg Temperature</h3>
          <p className="text-2xl font-bold">{avgTemperature.toFixed(2)}°C</p>
        </div>
      </div>

      {/* Data Table */}
      <table className="w-full border-collapse">
        <thead>
          <tr className="bg-gray-100">
            <th className="border border-gray-300 p-2 text-left">Date & Time</th>
            <th className="border border-gray-300 p-2 text-left">Supplier</th>
            <th className="border border-gray-300 p-2 text-right">Quantity (L)</th>
            <th className="border border-gray-300 p-2 text-right">Temp (°C)</th>
            <th className="border border-gray-300 p-2 text-right">Fat (%)</th>
            <th className="border border-gray-300 p-2 text-right">pH</th>
          </tr>
        </thead>
        <tbody>
          {collections.map((collection) => (
            <tr key={collection.id} className="hover:bg-gray-50">
              <td className="border border-gray-300 p-2">
                {format(new Date(collection.collection_date), 'MMM dd, yyyy HH:mm')}
              </td>
              <td className="border border-gray-300 p-2">{collection.supplier_name}</td>
              <td className="border border-gray-300 p-2 text-right">{parseFloat(collection.quantity).toFixed(2)}</td>
              <td className="border border-gray-300 p-2 text-right">
                {collection.temperature ? parseFloat(collection.temperature).toFixed(2) : '-'}
              </td>
              <td className="border border-gray-300 p-2 text-right">
                {collection.fat_content ? parseFloat(collection.fat_content).toFixed(2) : '-'}
              </td>
              <td className="border border-gray-300 p-2 text-right">
                {collection.ph ? parseFloat(collection.ph).toFixed(2) : '-'}
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Footer */}
      <div className="mt-8 pt-4 border-t border-gray-200 flex justify-between items-center">
        <div className="text-xs text-gray-500">
          <p>Generated by Dairy Management System</p>
        </div>
        <div className="text-xs text-gray-500 text-right">
          <p>Generated on: {format(new Date(), 'MMMM dd, yyyy HH:mm')}</p>
          <p>Page 1 of 1</p>
        </div>
      </div>
    </div>
  );
});

PrintCollectionReport.displayName = 'PrintCollectionReport';

export default PrintCollectionReport;